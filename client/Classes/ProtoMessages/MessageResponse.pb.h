// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageResponse.proto

#ifndef PROTOBUF_MessageResponse_2eproto__INCLUDED
#define PROTOBUF_MessageResponse_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "CommunicationMessageType.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_MessageResponse_2eproto();
void protobuf_AssignDesc_MessageResponse_2eproto();
void protobuf_ShutdownFile_MessageResponse_2eproto();

class MessageResponse;

// ===================================================================

class MessageResponse : public ::google::protobuf::MessageLite {
 public:
  MessageResponse();
  virtual ~MessageResponse();

  MessageResponse(const MessageResponse& from);

  inline MessageResponse& operator=(const MessageResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_.GetNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  inline ::std::string* mutable_unknown_fields() {
    return _unknown_fields_.MutableNoArena(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

  static const MessageResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MessageResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MessageResponse* other);

  // implements Message ----------------------------------------------

  inline MessageResponse* New() const { return New(NULL); }

  MessageResponse* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MessageResponse& from);
  void MergeFrom(const MessageResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MessageResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .eCommunicationMessageType messageType = 1 [default = cmtNone];
  bool has_messagetype() const;
  void clear_messagetype();
  static const int kMessageTypeFieldNumber = 1;
  ::eCommunicationMessageType messagetype() const;
  void set_messagetype(::eCommunicationMessageType value);

  // required bytes messageBody = 2 [default = "\000"];
  bool has_messagebody() const;
  void clear_messagebody();
  static const int kMessageBodyFieldNumber = 2;
  const ::std::string& messagebody() const;
  void set_messagebody(const ::std::string& value);
  void set_messagebody(const char* value);
  void set_messagebody(const void* value, size_t size);
  ::std::string* mutable_messagebody();
  ::std::string* release_messagebody();
  void set_allocated_messagebody(::std::string* messagebody);

  // required int32 errorCode = 3 [default = 0];
  bool has_errorcode() const;
  void clear_errorcode();
  static const int kErrorCodeFieldNumber = 3;
  ::google::protobuf::int32 errorcode() const;
  void set_errorcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MessageResponse)
 private:
  inline void set_has_messagetype();
  inline void clear_has_messagetype();
  inline void set_has_messagebody();
  inline void clear_has_messagebody();
  inline void set_has_errorcode();
  inline void clear_has_errorcode();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  static ::std::string* _default_messagebody_;
  ::google::protobuf::internal::ArenaStringPtr messagebody_;
  int messagetype_;
  ::google::protobuf::int32 errorcode_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_MessageResponse_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_MessageResponse_2eproto();
  #endif
  friend void protobuf_AssignDesc_MessageResponse_2eproto();
  friend void protobuf_ShutdownFile_MessageResponse_2eproto();

  void InitAsDefaultInstance();
  static MessageResponse* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageResponse

// required .eCommunicationMessageType messageType = 1 [default = cmtNone];
inline bool MessageResponse::has_messagetype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MessageResponse::set_has_messagetype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MessageResponse::clear_has_messagetype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MessageResponse::clear_messagetype() {
  messagetype_ = 0;
  clear_has_messagetype();
}
inline ::eCommunicationMessageType MessageResponse::messagetype() const {
  // @@protoc_insertion_point(field_get:MessageResponse.messageType)
  return static_cast< ::eCommunicationMessageType >(messagetype_);
}
inline void MessageResponse::set_messagetype(::eCommunicationMessageType value) {
  assert(::eCommunicationMessageType_IsValid(value));
  set_has_messagetype();
  messagetype_ = value;
  // @@protoc_insertion_point(field_set:MessageResponse.messageType)
}

// required bytes messageBody = 2 [default = "\000"];
inline bool MessageResponse::has_messagebody() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MessageResponse::set_has_messagebody() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MessageResponse::clear_has_messagebody() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MessageResponse::clear_messagebody() {
  messagebody_.ClearToDefaultNoArena(_default_messagebody_);
  clear_has_messagebody();
}
inline const ::std::string& MessageResponse::messagebody() const {
  // @@protoc_insertion_point(field_get:MessageResponse.messageBody)
  return messagebody_.GetNoArena(_default_messagebody_);
}
inline void MessageResponse::set_messagebody(const ::std::string& value) {
  set_has_messagebody();
  messagebody_.SetNoArena(_default_messagebody_, value);
  // @@protoc_insertion_point(field_set:MessageResponse.messageBody)
}
inline void MessageResponse::set_messagebody(const char* value) {
  set_has_messagebody();
  messagebody_.SetNoArena(_default_messagebody_, ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageResponse.messageBody)
}
inline void MessageResponse::set_messagebody(const void* value, size_t size) {
  set_has_messagebody();
  messagebody_.SetNoArena(_default_messagebody_,
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageResponse.messageBody)
}
inline ::std::string* MessageResponse::mutable_messagebody() {
  set_has_messagebody();
  // @@protoc_insertion_point(field_mutable:MessageResponse.messageBody)
  return messagebody_.MutableNoArena(_default_messagebody_);
}
inline ::std::string* MessageResponse::release_messagebody() {
  clear_has_messagebody();
  return messagebody_.ReleaseNoArena(_default_messagebody_);
}
inline void MessageResponse::set_allocated_messagebody(::std::string* messagebody) {
  if (messagebody != NULL) {
    set_has_messagebody();
  } else {
    clear_has_messagebody();
  }
  messagebody_.SetAllocatedNoArena(_default_messagebody_, messagebody);
  // @@protoc_insertion_point(field_set_allocated:MessageResponse.messageBody)
}

// required int32 errorCode = 3 [default = 0];
inline bool MessageResponse::has_errorcode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MessageResponse::set_has_errorcode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MessageResponse::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MessageResponse::clear_errorcode() {
  errorcode_ = 0;
  clear_has_errorcode();
}
inline ::google::protobuf::int32 MessageResponse::errorcode() const {
  // @@protoc_insertion_point(field_get:MessageResponse.errorCode)
  return errorcode_;
}
inline void MessageResponse::set_errorcode(::google::protobuf::int32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:MessageResponse.errorCode)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MessageResponse_2eproto__INCLUDED
